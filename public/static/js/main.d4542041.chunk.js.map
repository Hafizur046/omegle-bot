{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","require","App","useState","messages","setMessages","pushToMessages","setPushToMessages","messageInput","setMessageInput","useEffect","on","msg","className","map","message","type","value","onChange","e","target","console","log","emit","split","length","style","width","height","position","bottom","left","onKeyUp","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAGMA,GAASC,EADAC,EAAQ,IAAfD,IACU,+BA+EHE,MA7Ef,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAcA,OAZAC,qBAAU,WACe,KAAnBJ,IACJD,EAAY,CAACC,GAAF,mBAAqBF,KAChCG,EAAkB,OACjB,CAACD,EAAgBF,IAEpBM,qBAAU,WACRX,EAAOY,GAAG,WAAW,SAACC,GACpBL,EAAkBK,QAEnB,IAGD,sBAAKC,UAAU,MAAf,UACGT,EAASU,KAAI,SAACC,GAAD,OACZ,6BAAKA,OAGP,uBACEC,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACC,GACc,KAAnBA,EAAEC,OAAOH,OACXI,QAAQC,IAAI,kBACZvB,EAAOwB,KAAK,gBACiC,IAApCJ,EAAEC,OAAOH,MAAMO,MAAM,IAAIC,QAClC1B,EAAOwB,KAAK,gBAEdd,EAAgBU,EAAEC,OAAOH,QAE3BS,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,SAAU,QAEVC,OAAQ,EACRC,KAAM,KAERC,QAAS,SAACb,GACM,UAAVA,EAAEc,MAEJlC,EAAOwB,KAAK,UAAWf,GACvBC,EAAgB,YCxCbyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4542041.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nconst { io } = require(\"socket.io-client\");\nconst socket = io(\"http://165.232.176.178:3000\");\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [pushToMessages, setPushToMessages] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n\n  useEffect(() => {\n    if (pushToMessages === \"\") return;\n    setMessages([pushToMessages, ...messages]);\n    setPushToMessages(\"\");\n  }, [pushToMessages, messages]);\n\n  useEffect(() => {\n    socket.on(\"message\", (msg) => {\n      setPushToMessages(msg);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {messages.map((message) => (\n        <h4>{message}</h4>\n      ))}\n\n      <input\n        type=\"text\"\n        value={messageInput}\n        onChange={(e) => {\n          if (e.target.value === \"\") {\n            console.log(\"stopped typing\");\n            socket.emit(\"stop-typing\");\n          } else if (e.target.value.split(\"\").length === 1) {\n            socket.emit(\"start-typing\");\n          }\n          setMessageInput(e.target.value);\n        }}\n        style={{\n          width: \"100vw\",\n          height: \"10vh\",\n          position: \"fixed\",\n          //top: \"95vh\",\n          bottom: 0,\n          left: \"0\",\n        }}\n        onKeyUp={(e) => {\n          if (e.key === \"Enter\") {\n            //setPushToMessages(`You: ${messageInput}`);\n            socket.emit(\"message\", messageInput);\n            setMessageInput(\"\");\n          }\n        }}\n      />\n      {/*<button\n        style={{\n          width: \"20vw\",\n          height: \"6vh\",\n          border: \"none\",\n          position: \"fixed\",\n          //top: \"95vh\",\n          bottom: 0,\n          left: \"82vw\",\n          background: \"#000\",\n          color: \"#fff\",\n          border: \"none\",\n          outline: \"none\",\n        }}\n        onClick={() => {\n          //setPushToMessages(`You: ${messageInput}`);\n          socket.emit(\"message\", messageInput);\n          setMessageInput(\"\");\n        }}\n      >\n        Send\n        </button>*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}