{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URI","process","socket","io","App","useState","messages","setMessages","isTyping","setIsTyping","messageInput","setMessageInput","useEffect","on","msg","currentMessages","className","map","message","type","value","onChange","e","target","console","log","emit","split","length","style","width","height","position","bottom","left","onKeyUp","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGMA,EACJC,mIAAiB,MACe,mBAA/BA,mIAAyB,YACtB,0BACA,yBACAC,EAASC,YAAGH,GA0DHI,MAxDf,WACE,MAAgCC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,KAC5B,EAAgCF,oBAAS,GAAM,mBAAxCG,EAAQ,KAAEC,EAAW,KAC5B,EAAwCJ,mBAAS,IAAG,mBAA7CK,EAAY,KAAEC,EAAe,KAepC,OAbAC,qBAAU,WACRV,EAAOW,GAAG,WAAW,SAACC,GACpBL,GAAY,GACZF,GAAY,SAACQ,GAAe,OAAMD,GAAG,mBAAKC,GAAe,GAC3D,IACAb,EAAOW,GAAG,kBAAkB,WAC1BJ,GAAY,EACd,IACAP,EAAOW,GAAG,kBAAkB,WAC1BJ,GAAY,EACd,GACF,GAAG,IAGD,sBAAKO,UAAU,MAAK,UAClB,6BAAKR,GAAY,yBAChBF,EAASW,KAAI,SAACC,GAAO,OACpB,6BAAKA,GAAa,IAGpB,uBACEC,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACC,GACc,KAAnBA,EAAEC,OAAOH,OACXI,QAAQC,IAAI,kBACZvB,EAAOwB,KAAK,gBACiC,IAApCJ,EAAEC,OAAOH,MAAMO,MAAM,IAAIC,QAClC1B,EAAOwB,KAAK,gBAEdf,EAAgBW,EAAEC,OAAOH,MAC3B,EACAS,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,SAAU,QAEVC,OAAQ,EACRC,KAAM,KAERC,QAAS,SAACb,GACM,UAAVA,EAAEc,MACJlC,EAAOwB,KAAK,UAAWhB,GACvBC,EAAgB,IAEpB,MAIR,ECpDe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.7c252732.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nconst URI =\n  process.env[\"URI\"] ||\n  (process.env[\"ENVIRONMENT\"] === \"hafizur-gentoo\"\n    ? \"http://192.168.0.6:3000\"\n    : \"http://localhost:3000\");\nconst socket = io(URI);\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageInput, setMessageInput] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"message\", (msg) => {\n      setIsTyping(false);\n      setMessages((currentMessages) => [msg, ...currentMessages]);\n    });\n    socket.on(\"started-typing\", () => {\n      setIsTyping(true);\n    });\n    socket.on(\"stopped-typing\", () => {\n      setIsTyping(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h4>{isTyping && \"Stranger: Typing....\"}</h4>\n      {messages.map((message) => (\n        <h4>{message}</h4>\n      ))}\n\n      <input\n        type=\"text\"\n        value={messageInput}\n        onChange={(e) => {\n          if (e.target.value === \"\") {\n            console.log(\"stopped typing\");\n            socket.emit(\"stop-typing\");\n          } else if (e.target.value.split(\"\").length === 1) {\n            socket.emit(\"start-typing\");\n          }\n          setMessageInput(e.target.value);\n        }}\n        style={{\n          width: \"100vw\",\n          height: \"10vh\",\n          position: \"fixed\",\n          //top: \"95vh\",\n          bottom: 0,\n          left: \"0\",\n        }}\n        onKeyUp={(e) => {\n          if (e.key === \"Enter\") {\n            socket.emit(\"message\", messageInput);\n            setMessageInput(\"\");\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}